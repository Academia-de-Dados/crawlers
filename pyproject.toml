[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "exam"
description = "Obtem questÃµes para os vestibulares/enem"
readme = { "file" = "README.md", "content-type" = "text/markdown" }
requires-python = ">=3.11"
license = "GPL-3.0-only"
keywords = ["python", "exam", "scrapy", "crawlers", "enem"]
authors = [{ name = "Igor Matos", email = "igor.matos@ish.com.br" }]
classifiers = [
  "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.11",
  "Framework :: Scrapy",
]
dependencies = ["scrapy>=2.8.0,<3.0.0", "pymongo<5.0.0,>=4.3.3"]
dynamic = ["version"]

[project.optional-dependencies]
dev = ["ipython>=8.12.0,<9.0.0", "ipdb>=0.13.13,<1.0.0"]

[project.urls]
Documentation = "https://github.com/Academia-de-Dados/crawlers#readme"
Issues = "https://github.com/Academia-de-Dados/crawlers/issues"
Source = "https://github.com/Academia-de-Dados/crawlers"

[tool.hatch.version]
path = "exam/__about__.py"

[tool.hatch.envs.style]
dependencies = ["ruff>=0.0.260,<1.0.0"]

[tool.hatch.envs.style.scripts]
check = "ruff check ."
format = "ruff lint . --fix"

[tool.hatch.envs.git]
dependencies = ["gitlint==0.19.1", "pre-commit>=3.2.1,<4.0.0"]

[tool.hatch.envs.git.scripts]
install = ["pre-commit install", "gitlint install-hook"]
precommit = "pre-commit run"
lint = "gitlint {args}"

[tool.hatch.build.targets.sdist]
include = ["/exam", "/scrapy.cfg"]

[tool.ruff]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = [
  "A",
  "B",
  "D",
  "E",
  "G",
  "I",
  "N",
  "Q",
  "W",
  "ANN",
  "ARG",
  "BLE",
  "COM",
  "DTZ",
  "EM",
  "ERA",
  "FBT",
  "ICN",
  "INP",
  "ISC",
  "PIE",
  "PL",
  "PT",
  "PTH",
  "PYI",
  "RET",
  "RSE",
  "RUF",
  "SIM",
  "SLF",
  "TCH",
  "TID",
  "TRY",
  "UP",
  "YTT",
]
ignore = [
  "D100",
  "D101",
  "D102",
  "D104",
  "D203",
  "D212",
  "ANN001",
  "ANN101",
  "ANN102",
  "ANN201",
  "ANN206",
  "ARG002",
  "Q000",
  "G002",
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = [
  "A",
  "B",
  "D",
  "E",
  "G",
  "I",
  "N",
  "Q",
  "W",
  "ANN",
  "ARG",
  "BLE",
  "COM",
  "DTZ",
  "EM",
  "ERA",
  "FBT",
  "ICN",
  "INP",
  "ISC",
  "PIE",
  "PL",
  "PT",
  "PTH",
  "PYI",
  "RET",
  "RSE",
  "RUF",
  "SIM",
  "SLF",
  "TCH",
  "TID",
  "TRY",
  "UP",
  "YTT",
]
unfixable = []

exclude = [".git", ".ruff_cache", "dist", ".venv", ".cache"]


line-length = 79

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.11.
target-version = "py311"

[tool.ruff.mccabe]
max-complexity = 10
